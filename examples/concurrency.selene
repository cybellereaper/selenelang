package examples

// Tasks, channels, and awaiting asynchronous work.
fn count(limit: Int, out: Channel) {
    var i = 0;
    while i < limit {
        out.send(f"tick #${i}");
        i += 1;
    }
    out.close();
}

fn slowAdd(a: Int, b: Int): Int {
    return a + b;
}

fn main() {
    let updates = channel();
    spawn(count, 4, updates);

    try {
        while true {
            let message = await updates;
            print(message);
        }
    } catch (err) {
        print("updates exhausted");
    }

    let task = spawn(slowAdd, 20, 22);
    print("sum from task:", await task);
}

