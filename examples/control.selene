package examples

// Demonstrates Selene control flow: loops, branches, and early exits.
fn accumulateOdd(limit: Number): Number {
    var total = 0;
    for (let i = 0; i < limit; i = i + 1) {
        if i % 2 == 0 {
            continue;
        }
        if i > 7 {
            break;
        }
        total = total + i;
    }
    return total;
}

fn countdown(start: Number) {
    var counter = start;
    while counter > 0 {
        print("tick", counter);
        counter = counter - 1;
    }
}

fn main() {
    print("total", accumulateOdd(10));
    print("fib(6)", fib(6));
    countdown(3);
}

fn fib(n: Number): Number {
    if n <= 1 {
        return n;
    }
    return fib(n - 1) + fib(n - 2);
}

